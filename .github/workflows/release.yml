name: create release

on:
  push:
    tags:
      - v*

env:
  GO_VERSION: '1.22'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: '0'
      GOARCH: amd64
      GOOS: linux
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: go.sum
      - name: Build Artifact
        run: |
          go mod download
          go build -o dist/easyp ./cmd/easyp
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          if-no-files-found: error
          retention-days: 1

  docker-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: dist
          build-args: |
            ARTIFACT_SRC=ci
          file: Docker/base/Dockerfile
          push: true
          tags: ${{ github.repository }}:${{ github.ref_name }}
